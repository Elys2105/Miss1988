@model IEnumerable<Miss1988.Models.Mon>

@{
    ViewBag.Title = "Menu";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var categories = ViewBag.NhomMons as List<Miss1988.Models.NhomMon>;
    var currentCategoryName = ViewBag.CurrentCategoryName as string;
}

<style>
    body {
        font-family: 'Segoe UI', sans-serif;
        background: #fff;
        margin: 0;
    }

    .menu-container {
        display: flex;
        max-width: 1300px;
        margin: 40px auto;
        padding: 0 30px;
        gap: 40px;
    }

    /* SIDEBAR */
    .menu-sidebar {
        width: 220px;
        border-right: 1px solid #f0f0f0;
    }

        .menu-sidebar ul {
            list-style: none;
            padding: 0;
        }

        .menu-sidebar li {
            padding: 10px 0;
        }

            .menu-sidebar li a {
                text-decoration: none;
                color: #333;
                font-weight: 500;
                font-size: 15px;
                transition: all 0.2s ease;
            }

            .menu-sidebar li.active a {
                color: #f98d2a;
                font-weight: bold;
            }

            .menu-sidebar li a:hover {
                color: #f98d2a;
            }

    /* PRODUCT GRID */
    .menu-products {
        flex: 1;
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(210px, 1fr));
        gap: 30px;
    }

    .section-title {
        grid-column: 1 / -1;
        font-size: 22px;
        margin-bottom: 10px;
        color: #555;
    }

    .product-card {
        background: #fff;
        border-radius: 16px;
        padding: 20px;
        box-shadow: 0 4px 14px rgba(0,0,0,0.05);
        text-align: center;
        transition: transform 0.2s ease;
    }

        .product-card:hover {
            transform: translateY(-6px);
        }

        .product-card img {
            width: 140px;
            height: 140px;
            border-radius: 50%;
            object-fit: cover;
            margin-bottom: 12px;
        }

        .product-card h5 {
            font-size: 16px;
            font-weight: 600;
            margin: 0;
            margin-bottom: 6px;
        }

        .product-card p {
            color: #f98d2a;
            font-size: 15px;
            margin: 0;
        }

    .btn {
        margin-top: 10px;
        font-size: 13px;
        padding: 6px 12px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
    }

    .btn-outline {
        background: #fff;
        border: 1px solid #ccc;
        color: #444;
    }

    .btn-buy {
        background: #f98d2a;
        color: white;
        margin-left: 8px;
    }

        .btn-buy:hover {
            background: #e77d19;
        }

    .btn-outline:hover {
        background: #f5f5f5;
    }
</style>

<div class="menu-container">
    <!-- SIDEBAR -->
    <div class="menu-sidebar">
        <ul>
            <li class="@(string.IsNullOrEmpty(currentCategoryName) || currentCategoryName == "Tất cả" ? "active" : "")">
                <a href="@Url.Action("Index", "Menu")">🍽️ Tất Cả</a>
            </li>
            @foreach (var cat in categories)
            {
                var isActive = !string.IsNullOrEmpty(currentCategoryName)
                               && cat.TenNhom.Equals(currentCategoryName, StringComparison.OrdinalIgnoreCase);
                <li class="@(isActive ? "active" : "")">
                    <a href="@Url.Action("Index", "Menu", new { tenNhom = cat.TenNhom })">@cat.TenNhom</a>
                </li>
            }
        </ul>
    </div>

    <!-- SẢN PHẨM -->
    <div class="menu-products">
        <div class="section-title">
            @Model.Count() sản phẩm
            @if (!string.IsNullOrEmpty(currentCategoryName) && currentCategoryName != "Tất cả")
            {
                <span> trong nhóm <strong>@currentCategoryName</strong></span>
            }
        </div>

        @if (Model.Any())
        {
            foreach (var item in Model)
            {
                var imgUrl = string.IsNullOrEmpty(item.ImageUrl)
                    ? Url.Content("~/Content/Images/no-image.png")
                    : item.ImageUrl.StartsWith("http") ? item.ImageUrl : Url.Content(item.ImageUrl);

                <div class="product-card">
                    <img src="@imgUrl" alt="@item.TenMon" />
                    <h5>@item.TenMon</h5>
                    <p>@string.Format("{0:N0} đ", item.GiaBan)</p>

                    <form method="post" action="@Url.Action("AddToCart", "Cart")" style="display:inline-block;">
                        <input type="hidden" name="productId" value="@item.MonID" />
                        <button type="submit" class="btn btn-outline">🛒 Thêm</button>
                    </form>

                    <form method="post" action="@Url.Action("CheckoutWithOptions", "Cart")" style="display:inline-block;">
                        <input type="hidden" name="productId" value="@item.MonID" />
                        <input type="hidden" name="selectedSize" value="Mặc định" />
                        <input type="hidden" name="selectedToppings" value="" />
                        <button type="submit" class="btn btn-buy">⚡ Mua</button>
                    </form>
                </div>
            }
        }
        else
        {
            <div style="grid-column: 1 / -1; text-align: center; color: #999; font-size: 16px;">
                Không có sản phẩm nào trong nhóm này.
            </div>
        }
    </div>
</div>
